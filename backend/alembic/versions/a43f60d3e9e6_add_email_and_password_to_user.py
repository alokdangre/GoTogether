"""add email and password to user

Revision ID: a43f60d3e9e6
Revises: 
Create Date: 2025-10-31 09:45:30.631287

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a43f60d3e9e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_phone_verified', sa.Boolean(), nullable=True),
    sa.Column('is_email_verified', sa.Boolean(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('total_trips', sa.Integer(), nullable=True),
    sa.Column('total_ratings', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_table('trips',
    sa.Column('driver_id', sa.UUID(), nullable=False),
    sa.Column('origin_lat', sa.Float(), nullable=False),
    sa.Column('origin_lng', sa.Float(), nullable=False),
    sa.Column('origin_address', sa.String(length=500), nullable=True),
    sa.Column('origin_geohash', sa.String(length=12), nullable=False),
    sa.Column('dest_lat', sa.Float(), nullable=False),
    sa.Column('dest_lng', sa.Float(), nullable=False),
    sa.Column('dest_address', sa.String(length=500), nullable=True),
    sa.Column('dest_geohash', sa.String(length=12), nullable=False),
    sa.Column('departure_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_seats', sa.Integer(), nullable=False),
    sa.Column('available_seats', sa.Integer(), nullable=False),
    sa.Column('fare_per_person', sa.Float(), nullable=False),
    sa.Column('vehicle_type', sa.Enum('CAR', 'AUTO', 'BIKE', name='vehicletype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'FULL', 'COMPLETED', 'CANCELLED', name='tripstatus'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['driver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trips_departure_time'), 'trips', ['departure_time'], unique=False)
    op.create_index(op.f('ix_trips_dest_geohash'), 'trips', ['dest_geohash'], unique=False)
    op.create_index(op.f('ix_trips_origin_geohash'), 'trips', ['origin_geohash'], unique=False)
    op.create_index(op.f('ix_trips_status'), 'trips', ['status'], unique=False)
    op.create_table('chat_messages',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_type', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_trip_id'), 'chat_messages', ['trip_id'], unique=False)
    op.create_table('payments',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('total_fare', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', name='paymentstatus'), nullable=True),
    sa.Column('gateway', sa.Enum('RAZORPAY', 'STRIPE', name='paymentgateway'), nullable=False),
    sa.Column('gateway_payment_id', sa.String(length=100), nullable=True),
    sa.Column('gateway_order_id', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trip_id')
    )
    op.create_table('ratings',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('rater_id', sa.UUID(), nullable=False),
    sa.Column('rated_user_id', sa.UUID(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['rated_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['rater_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('trip_id', 'rater_id', 'rated_user_id', name='unique_trip_rating')
    )
    op.create_table('trip_members',
    sa.Column('trip_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('seats_requested', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'COMPLETED', name='memberstatus'), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_splits',
    sa.Column('payment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'FAILED', name='splitstatus'), nullable=True),
    sa.Column('gateway_transfer_id', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment_splits')
    op.drop_table('trip_members')
    op.drop_table('ratings')
    op.drop_table('payments')
    op.drop_index(op.f('ix_chat_messages_trip_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_trips_status'), table_name='trips')
    op.drop_index(op.f('ix_trips_origin_geohash'), table_name='trips')
    op.drop_index(op.f('ix_trips_dest_geohash'), table_name='trips')
    op.drop_index(op.f('ix_trips_departure_time'), table_name='trips')
    op.drop_table('trips')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
